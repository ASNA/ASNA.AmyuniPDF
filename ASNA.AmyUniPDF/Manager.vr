Using System
Using System.Text
Using System.IO
Using System.Xml

DclNamespace ASNA.AmyUniPDF

BegEnum AmyuniFileOptions
    DclEnumFld DoNotPromptForFileName Value(1)
    DclEnumFld UseFileNameSpecified   Value(2)
EndEnum

BegClass Manager Access(*Public)
    DclFld DriverInfo Type(PDFDriverInfo) Access(*Public) 
    DclFld AmyuniPDF  Type(CDIntfEx.CDIntfExClass) Access(*Private)

    //--------------------------------------------------------------------------
    // Public constructor(s).
    //--------------------------------------------------------------------------
    BegConstructor Access(*Public)
        DclSrParm XmlFilePath     Type(*String)
        DclSrParm OutputFilePath  Type(*String)

        *This.DriverInfo = DriverInfo.GetInstance(XmlFilePath, OutputFilePath)
    EndConstructor

    BegSr StartDriver Access(*Public)
        DclFld SpoolFileName Type(*String)
        DclFld ReturnCode    Type(*Integer4)
        DclFld FileOptions   Type(*Integer4)

        FileOptions = AmyuniFileOptions.DoNotPromptForFileName ++
                      AmyuniFileOptions.UseFileNameSpecified

        SpoolFileName = DriverInfo.OutputFileName

        AmyuniPDF = *New CDIntfEx.CDIntfExClass()

        ReturnCode = AmyuniPDF.DriverInit(DriverInfo.PrinterName)
        If (ReturnCode <> 0)
            Throw *New System.ApplicationException("AmyuniPDF failed on DriverInit() call.")
        EndIf

        AmyuniPDF.HorizontalMargin = 0
        AmyuniPDF.VerticalMargin   = 0
        AmyuniPDF.SetDefaultConfig()
        AmyuniPDF.SetDefaultPrinter()
        AmyuniPDF.Lock(SpoolFileName)
        AmyuniPDF.SetDocFileProps(SpoolFileName, FileOptions, DriverInfo.OutputPath, DriverInfo.OutputPath + DriverInfo.OutputFileName + '.pdf' )

        ReturnCode = AmyuniPDF.EnablePrinter(DriverInfo.LicenseCompany,DriverInfo.LicenseCode)
        If (ReturnCode <> 0)
            Throw *New System.ApplicationException("AmyuniPDF failed on EnablePrinter() call.")
        EndIf
    EndSr

    BegFunc StopDriver Type(*String) Access(*Public)
        DclFld SpoolFileName Type(*String)

        SpoolFileName = DriverInfo.OutputFileName
        AmyuniPDF.RestoreDefaultPrinter()
        AmyuniPDF.Unlock(SpoolFileName, 1000)
        AmyuniPDF.DriverEnd()
        AmyuniPDF = *Nothing

        WaitForFile(DriverInfo.OutputPath + DriverInfo.OutputFileName + ".pdf")
        LeaveSr DriverInfo.OutputFileName + ".pdf"
    EndFunc

    BegSr WaitForFile
        DclSrParm FiletoMonitor Type(*String)

        DclFld Stream       Type(FileStream)
        DclFld FileisInUse  Type(*Boolean)
        DclFld MaxTries     Type(*Integer4) Inz(10)
        DclFld TryCount     Type(*Integer4)

        // This routine is required because it takes a few seconds for AmyuniPDF to 'release' the PDF
        // once print file is closed. This method tries to open file, which it cannot do until AmyuniPDF
        // releases it. Once the file can be opened, you're good to do.

        If System.IO.File.Exists(FiletoMonitor)
            FileisInUse = *True

            DoWhile FileisInUse
                Try
                    Stream = System.IO.File.Open(FiletoMonitor,FileMode.Open,FileAccess.Read,FileShare.None)
                    FileisInUse = *False
                    TryCount += 1
                    If (TryCount = MaxTries)
                        Stream.Close()
                        Throw *New System.ApplicationException("AmyuniPDF didn't release the PDF.")
                    EndIf
                Catch
                    System.Threading.Thread.Sleep(3000)
                EndTry
            EndDo

            If Stream <> *Nothing
                Stream.Close()
            EndIf
        EndIf
    EndSr
EndClass
