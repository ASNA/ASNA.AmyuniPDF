Using System
Using System.Text
Using System.Xml
Using System.IO

DclNamespace ASNA.AmyUniPDF

BegClass PdfDriverInfo Access(*Public)
    // The printer name as view in "Devices and Printers" in Windows.
    DclProp PrinterName          Type(*String) Access(*Public) SetAccess(*Private)
    // The licensed company and code from Amyuni.
    DclProp LicenseCompany       Type(*String) Access(*Public) SetAccess(*Private)
    DclProp LicenseCode          Type(*String) Access(*Public) SetAccess(*Private)
    // The output path for the PDF file.
    DclProp OutputPath           Type(*String) Access(*Public) SetAccess(*Private)
    // The PDF file name *without* the PDF extension. 
    DclProp OutputFileName       Type(*String) Access(*Public) SetAccess(*Private)

    // Given the path where the XML configuration file should be located, return 
    // the full name of the XML configuration. In this example the file name is 
    // hardcoded at `AmyuniDriverInfo.xml`'
    BegFunc GetFullXmlFileName Type(*String) Access(*Private) Shared(*Yes)
        DclSrParm XmlFilePath  Type(*String)

        DclFld   FullXmlFileName Type(*String)
        DclConst FileName Value('AmyuniDriverInfo.xml')

        XmlFilePath = Helpers.EnsureTrailingSlash(XmlFilePath)
        FullXmlFileName = XmlFilePath + FileName
        If ( NOT File.Exists(FullXmlFileName))
            Throw *New System.Exception('Amyuni XML driver info file is not available at: ' + FullXmlFileName)
        EndIf

        LeaveSr FullXmlFileName
    EndFunc

    // This shared method returns an instance of `PdfDriverInfo` with its properties populated.  
    BegFunc GetInstance Access(*Public) Shared(*Yes) Type(PDFDriverInfo)
        DclSrParm XmlFilePath     Type(*String)
        DclSrParm OutputFilePath  Type(*String)

        DclFld XmlDoc          Type(XmlDocument) New()
        DclFld DocRoot         Type(*String)
        DclFld Node            Type(XmlNode)
        DclFld di              Type(PDFDriverInfo) New()
        DclFld FullXmlFileName Type(*String)

        OutputFilePath = Helpers.EnsureTrailingSlash(OutputFilePath)

        FullXmlFileName = GetFullXmlFileName(XmlFilePath)
        XmlDoc.Load(FullXmlFileName)

        DocRoot = "/Root"
        Node = XmlDoc.SelectSingleNode(DocRoot + '/AmyuniPDF/PrinterName')
        di.PrinterName = Node.InnerText

        Node = XmlDoc.SelectSingleNode(DocRoot + '/AmyuniPDF/LicenseCompany')
        di.LicenseCompany = Node.InnerText

        Node = XmlDoc.SelectSingleNode(DocRoot + '/AmyuniPDF/LicenseCode')
        di.LicenseCode = Node.InnerText

        di.OutputFileName = Path.GetRandomFileName().Replace('.', '-')
        di.OutputPath = OutputFilePath

        LeaveSr di
    EndFunc
EndClass


