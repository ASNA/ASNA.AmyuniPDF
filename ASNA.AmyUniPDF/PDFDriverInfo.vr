Using System
Using System.Text
Using System.Xml
Using System.IO

DclNamespace ASNA.AmyUniPDF

BegClass PdfDriverInfo Access(*Public)
    DclFld _PrinterName          Type(*String)
    DclFld _LicenseCompany       Type(*String)
    DclFld _LicenseCode          Type(*String)
    DclFld _OutputPath           Type(*String)
    DclFld _OutputFileName       Type(*String)

    BegProp PrinterName Type(*String) Access(*Public) SetAccess(*Private)
        BegGet
            LeaveSr *This._PrinterName
        EndGet
        BegSet
            *This._PrinterName = *PropVal
        EndSet
    EndProp

    BegProp LicenseCompany Type(*String) Access(*Public) SetAccess(*Private)
        BegGet
            LeaveSr *This._LicenseCompany
        EndGet
        BegSet
            *This._LicenseCompany = *PropVal
        EndSet
    EndProp

    BegProp LicenseCode  Type(*String) Access(*Public) SetAccess(*Private)
        BegGet
            LeaveSr *This._LicenseCode
        EndGet
        BegSet
            *This._LicenseCode  = *PropVal
        EndSet
    EndProp

    BegProp OutputPath Type(*String) Access(*Public) SetAccess(*Private)
        BegGet
            LeaveSr *This._OutputPath
        EndGet
        BegSet
            *This._OutputPath = *PropVal
        EndSet
    EndProp

    BegProp OutputFileName Type(*String) Access(*Public) SetAccess(*Private)
        BegGet
            LeaveSr *This._OutputFileName
        EndGet
        BegSet
            *This._OutputFileName = *PropVal
        EndSet
    EndProp
        
    BegFunc GetFullXmlFileName Type(*String) Access(*Private) Shared(*Yes)
        DclSrParm XmlFilePath  Type(*String)

        DclFld   FullXmlFileName Type(*String)
        DclConst FileName Value('AmyuniDriverInfo.xml')

        XmlFilePath = Helpers.EnsureTrailingSlash(XmlFilePath)
        FullXmlFileName = XmlFilePath + FileName
        If ( NOT File.Exists(FullXmlFileName))
            Throw *New System.Exception('Amyuni XML driver info file is not available at: ' + FullXmlFileName)
        EndIf

        LeaveSr FullXmlFileName
    EndFunc

    BegFunc GetInstance Access(*Public) Shared(*Yes) Type(PDFDriverInfo)
        DclSrParm XmlFilePath     Type(*String)
        DclSrParm OutputFilePath  Type(*String)

        DclFld XmlDoc          Type(XmlDocument) New()
        DclFld DocRoot         Type(*String)
        DclFld Node            Type(XmlNode)
        DclFld di              Type(PDFDriverInfo) New()
        DclFld FullXmlFileName Type(*String)

        OutputFilePath = Helpers.EnsureTrailingSlash(OutputFilePath)

        FullXmlFileName = GetFullXmlFileName(XmlFilePath)
        XmlDoc.Load(FullXmlFileName)

        DocRoot = "/Root"
        Node = XmlDoc.SelectSingleNode(DocRoot + '/AmyuniPDF/PrinterName')
        di.PrinterName = Node.InnerText

        Node = XmlDoc.SelectSingleNode(DocRoot + '/AmyuniPDF/LicenseCompany')
        di.LicenseCompany = Node.InnerText

        Node = XmlDoc.SelectSingleNode(DocRoot + '/AmyuniPDF/LicenseCode')
        di.LicenseCode = Node.InnerText

        di.OutputFileName = Path.GetRandomFileName().Replace('.', '-')
        di.OutputPath = OutputFilePath

        LeaveSr di
    EndFunc
EndClass


